<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
         http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.moha.demo.dao,com.moha.demo.service" />
    <context:property-placeholder location="classpath:jdbc.properties"
                                  ignore-unresolvable="true"/>

    <!-- jdbc数据源文件 -->
    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据库地址 -->
        <property name="url" value="${url}"></property>
        <!-- 用户名 -->
        <property name="username" value="${name}"></property>
        <!-- 密码 -->
        <property name="password" value="${password}"></property>
        <!-- 最大连接池数量 -->
        <property name="maxActive" value="${db.maxActive}"></property>
        <!-- 初始化物理连接个数 -->
        <property name="initialSize" value="${db.initialSize}"></property>
        <!-- 最小连接池数量 -->
        <property name="minIdle" value="${db.minIdle}"></property>
        <!-- 最大等待时间 -->
        <property name="maxWait" value="${db.maxWait}"></property>
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"></property>
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"></property>
        <!-- 检测连接是否有效的SQL -->
        <property name="testWhileIdle" value="${db.testWhileIdle}"></property>
        <!-- 申请连接时是否执行validationQuery -->
        <property name="testOnBorrow" value="${db.testOnBorrow}"></property>
        <!-- 归还连接时是否执行validationQuery -->
        <property name="testOnReturn" value="${db.testOnReturn}"></property>
        <!-- 配置扩展插件 统计监控:stat 日志:log4j 防御SQL注入:wall-->
        <property name="filters" value="${db.filters}"></property>
        <property name="validationQuery" value="${db.validationQuery}"></property>
    </bean>



    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 扫描entity包 -->
        <property name="typeAliasesPackage" value="com.moha.demo.entity" />
        <!-- 扫描sql配置文件 -->
        <property name="mapperLocations" value="classpath:mapping/*Mapper.xml" />
    </bean>

    <!-- 自动扫描包下的dao文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.moha.demo.dao"></property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true" />
    <bean id="threadPoolTaskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">

        <!-- 核心线程数，默认为1 -->
        <property name="corePoolSize" value="10" />

        <!-- 最大线程数，默认为Integer.MAX_VALUE -->
        <property name="maxPoolSize" value="50" />

        <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE
            <property name="queueCapacity" value="1000" /> -->

        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
        <property name="keepAliveSeconds" value="300" />

        <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
        <property name="rejectedExecutionHandler">
            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>

    <import resource="classpath*:config/spring-email.xml"/>
    <import resource="classpath*:config/spring-util.xml"/>
</beans>